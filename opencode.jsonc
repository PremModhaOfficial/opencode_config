{
  "$schema": "https://opencode.ai/config.json",
  // Main model - use free model for most tasks
  "model": "github-copilot/gpt-4.1",
  "agent": {
    // STRATEGY: Use FREE models (0x multiplier) for parallel tasks
    // Multiple builders can run in parallel for multi-file edits
    "builder-1": {
      "description": "Primary builder for implementation tasks. Uses memory MCP to avoid redoing work. Can spawn parallel with builder-2/3 for multi-file edits",
      "mode": "subagent",
      "model": "github-copilot/gpt-4.1",
      "temperature": 0.3,
      "tools": {
        "bash": true,
        "edit": true,
        "write": true,
        "read": true,
        "grep": true,
        "glob": true,
        "sqlite": true,
        "chroma": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow"
      }
    },
    "builder-2": {
      "description": "Secondary builder - runs in parallel with builder-1 for multi-file edits",
      "mode": "subagent",
      "model": "github-copilot/gpt-4.1",
      "temperature": 0.3,
      "tools": {
        "bash": true,
        "edit": true,
        "write": true,
        "read": true,
        "grep": true,
        "glob": true,
        "sqlite": true,
        "chroma": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow"
      }
    },
    "builder-3": {
      "description": "Tertiary builder - for massive refactors (3+ files). Runs parallel with builder-1 and builder-2",
      "mode": "subagent",
      "model": "github-copilot/gpt-4.1",
      "temperature": 0.3,
      "tools": {
        "bash": true,
        "edit": true,
        "write": true,
        "read": true,
        "grep": true,
        "glob": true,
        "sqlite": true,
        "chroma": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow"
      }
    },
    "tester-fast": {
      "description": "Ultra-fast test runner. Uses cheapest model for repetitive test execution",
      "mode": "subagent",
      "model": "github-copilot/grok-code-fast-1",
      "temperature": 0.1,
      "tools": {
        "bash": true,
        "read": true,
        "grep": true,
        "run": true,
        "sqlite": true
      },
      "permission": {
        "bash": {
          "npm test": "allow",
          "npm run test": "allow",
          "yarn test": "allow",
          "pytest": "allow",
          "cargo test": "allow",
          "go test": "allow",
          "*test*": "allow",
          "*": "ask"
        }
      }
    },
    "researcher-deep": {
      "description": "Deep research with web access. Uses DeepWiki MCP and search. Can run parallel with researcher-docs",
      "mode": "subagent",
      "model": "github-copilot/gpt-5-mini",
      "temperature": 0.2,
      "tools": {
        "webfetch": true,
        "read": true,
        "write": true,
        "grep": true,
        "search": true,
        "deepwiki": true,
        "search-server": true,
        "chroma": true
      },
      "permission": {
        "webfetch": "allow",
        "edit": "allow"
      }
    },
    "researcher-docs": {
      "description": "Documentation researcher - reads local docs, can run parallel with researcher-deep",
      "mode": "subagent",
      "model": "github-copilot/gpt-5-mini",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "write": true,
        "grep": true,
        "glob": true,
        "filesystem": true,
        "chroma": true
      },
      "permission": {
        "edit": "allow"
      }
    },
    "debugger-logic": {
      "description": "Logic debugging with strong reasoning. Uses Claude for complex bugs. Consults memory to avoid re-debugging",
      "mode": "subagent",
      "model": "github-copilot/claude-sonnet-4",
      "temperature": 0.1,
      "tools": {
        "bash": true,
        "read": true,
        "grep": true,
        "edit": true,
        "sqlite": true,
        "chroma": true
      },
      "permission": {
        "edit": "ask",
        "bash": "allow"
      }
    },
    "architect": {
      "description": "High-level architecture and complex refactoring. Only use for big decisions",
      "mode": "subagent",
      "model": "github-copilot/gpt-5",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "write": true,
        "filesystem": true,
        "chroma": true,
        "deepwiki": true
      },
      "permission": {
        "edit": "ask"
      }
    },
    "memory-manager": {
      "description": "Manages context and memory. Updates Chroma and SQLite with learnings. Runs in background",
      "mode": "subagent",
      "model": "github-copilot/grok-code-fast-1",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "sqlite": true,
        "chroma": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny"
      }
    }
  },
  // MCP server configuration - ONLY valid keys
  "mcp": {
    "filesystem": {
      "type": "local",
      "command": [
        "mcp-server-filesystem",
        "/home/prem-modha"
      ],
      "enabled": true,
      "environment": {}
    },
    "MCP_DOCKER": {
      "type": "local",
      "command": [
        "docker",
        "mcp",
        "gateway",
        "run"
      ]
    },
    "search-server": {
      "type": "local",
      "command": [
        "one-search-mcp"
      ],
      "enabled": true,
      "environment": {}
    },
    "sqlite": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "mcp-sqlite",
        "--db-path",
        "/home/prem-modha/.local/share/chroma/chroma.sqlite3"
      ],
      "enabled": true,
      "environment": {}
    },
    "chroma": {
      "type": "local",
      "command": [
        "uvx",
        "chroma-mcp"
      ],
      "enabled": true,
      "environment": {
        "CHROMA_CLIENT_TYPE": "persistent",
        "CHROMA_DATA_DIR": "/home/prem-modha/.local/share/chroma/data"
      }
    },
    "deepwiki": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "mcp-deepwiki@latest"
      ],
      "enabled": true,
      "environment": {}
    },
    "serena": {
      "type": "local",
      "command": [
        "/home/prem-modha/.local/bin/uv",
        "run",
        "--directory",
        "/home/prem-modha/serena",
        "serena",
        "start-mcp-server",
        "--context",
        "desktop-app"
      ],
      "enabled": true,
      "environment": {}
    }
  },
  "lsp": {
    "jdtls": {
      "command": [
        "/home/prem-modha/.local/share/opencode/bin/jdtls/bin/jdtls"
      ],
      "extensions": [
        ".java"
      ]
    },
    "lua": {
      "command": [
        "/home/prem-modha/.config/opencode/lua-lsp/bin/lua-language-server"
      ],
      "extensions": [
        ".lua"
      ]
    }
  },
  "tools": {
    "*": true
  },
  "experimental": {
    "hook": {
      "session_completed": [
        {
          "command": [
            "bash",
            "-c",
            "if ! pgrep -f 'chroma run' > /dev/null; then /home/prem-modha/.local/bin/chroma run --host 0.0.0.0 --port 8000 > /dev/null 2>&1 & fi"
          ]
        }
      ]
    }
  },
  "plugin": [
    "opencode-skills"
  ]
}
